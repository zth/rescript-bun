// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Nodeutil from "node:util";

function string(x) {
  return x;
}

function buffer(x) {
  return x;
}

function int8Array(x) {
  return x;
}

function uInt8Array(x) {
  return x;
}

function uInt8ClampedArray(x) {
  return x;
}

function uInt16Array(x) {
  return x;
}

function int16Array(x) {
  return x;
}

function uInt32Array(x) {
  return x;
}

function int32Array(x) {
  return x;
}

function float32Array(x) {
  return x;
}

function float64Array(x) {
  return x;
}

function dataView(x) {
  return x;
}

function classify(x) {
  if (typeof x === "string") {
    return {
      TAG: "String",
      _0: x
    };
  } else if (Buffer.isBuffer(x)) {
    return {
      TAG: "Buffer",
      _0: x
    };
  } else if (Nodeutil.types.isInt8Array(x)) {
    return {
      TAG: "Int8Array",
      _0: x
    };
  } else if (Nodeutil.types.isUint8Array(x)) {
    return {
      TAG: "Uint8Array",
      _0: x
    };
  } else if (Nodeutil.types.isUint8ClampedArray(x)) {
    return {
      TAG: "Uint8ClampedArray",
      _0: x
    };
  } else if (Nodeutil.types.isInt16Array(x)) {
    return {
      TAG: "Int16Array",
      _0: x
    };
  } else if (Nodeutil.types.isUint16Array(x)) {
    return {
      TAG: "Uint16Array",
      _0: x
    };
  } else if (Nodeutil.types.isInt32Array(x)) {
    return {
      TAG: "Int32Array",
      _0: x
    };
  } else if (Nodeutil.types.isUint32Array(x)) {
    return {
      TAG: "Uint32Array",
      _0: x
    };
  } else if (Nodeutil.types.isFloat32Array(x)) {
    return {
      TAG: "Float32Array",
      _0: x
    };
  } else if (Nodeutil.types.isFloat64Array(x)) {
    return {
      TAG: "Float64Array",
      _0: x
    };
  } else if (Nodeutil.types.isDataView(x)) {
    return {
      TAG: "DataView",
      _0: x
    };
  } else if (Nodeutil.types.isStringObject(x)) {
    return {
      TAG: "String",
      _0: x
    };
  } else {
    return {
      TAG: "Unknown",
      _0: x
    };
  }
}

let Impl = {
  string: string,
  buffer: buffer,
  int8Array: int8Array,
  uInt8Array: uInt8Array,
  uInt8ClampedArray: uInt8ClampedArray,
  uInt16Array: uInt16Array,
  int16Array: int16Array,
  uInt32Array: uInt32Array,
  int32Array: int32Array,
  float32Array: float32Array,
  float64Array: float64Array,
  dataView: dataView,
  classify: classify
};

export {
  Impl,
  string,
  buffer,
  int8Array,
  uInt8Array,
  uInt8ClampedArray,
  uInt16Array,
  int16Array,
  uInt32Array,
  int32Array,
  float32Array,
  float64Array,
  dataView,
  classify,
}
/* node:util Not a pure module */
